// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// Use production Supabase URL
const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL || "https://rsndonfydqhykowljuyn.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY || "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJzbmRvbmZ5ZHFoeWtvd2xqdXlubiIsInJvbGUiOiJhbm9uIiwiaWF0IjoxNzU0Njc1MzYwLCJleHAiOjIwNzAyNTEzNjB9.7dtJ6VOK_i_enstTjvzDuRAyUACNc78dlCldHjsxt58";

// IMPORTANT: set default schema here. If your table lives in 'app', set VITE_DB_SCHEMA=app
const DEFAULT_SCHEMA = (import.meta as any)?.env?.VITE_DB_SCHEMA || 'public';

// Singleton pattern to prevent multiple client instances
let supabaseInstance: ReturnType<typeof createClient<Database>> | null = null;

export const supabase = supabaseInstance || createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
    storageKey: 'sb-main-auth-token', // Use a specific storage key
    debug: false // Disable debug logging to reduce noise
  },
  db: {
    schema: DEFAULT_SCHEMA,
  },
  // Enable realtime for the main client
  realtime: {
    enabled: true
  }
});

// Store the instance to prevent recreation
if (!supabaseInstance) {
  supabaseInstance = supabase;
}
