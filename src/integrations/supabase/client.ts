// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';
import { envConfig } from '@/utils/envValidation';

// Use validated environment configuration
const SUPABASE_URL = envConfig.VITE_SUPABASE_URL;
const SUPABASE_PUBLISHABLE_KEY = envConfig.VITE_SUPABASE_ANON_KEY;
const DEFAULT_SCHEMA = envConfig.VITE_DB_SCHEMA || 'public';

if (!SUPABASE_URL || !SUPABASE_PUBLISHABLE_KEY) {
  throw new Error('Missing required environment variables: VITE_SUPABASE_URL and VITE_SUPABASE_ANON_KEY');
}

// Extract project ref from URL for scoped storage key
const projectRef = SUPABASE_URL.split('//')[1]?.split('.')[0] || 'unknown';

// Singleton pattern to prevent multiple client instances
let supabaseInstance: ReturnType<typeof createClient<Database>> | null = null;

function createSupabaseClient() {
  if (supabaseInstance) {
    return supabaseInstance;
  }
  
  supabaseInstance = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
    auth: {
      storage: localStorage,
      persistSession: true,
      autoRefreshToken: true,
      storageKey: `sb-${projectRef}-main-auth-token`, // Project-scoped storage key
      debug: false // Disable debug logging to reduce noise
    },
    db: {
      schema: DEFAULT_SCHEMA,
    },
    // Enable realtime for the main client
    realtime: {
      enabled: true
    }
  });
  
  return supabaseInstance;
}

export const supabase = createSupabaseClient();
